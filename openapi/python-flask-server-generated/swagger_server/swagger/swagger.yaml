openapi: 3.0.0
info:
  title: Edge-API
  description: "The Edge-API is built under the BIND5G project and its purpose is\
    \ to act as an intermidiator between the NaaS API and the Kubernetes cluster.\
    \ The NaaS API is a general API in respect of the project to remotely and automatically\
    \ deploy, manage and control 5G and MEC infrastructures for a vast amount of experiments.\
    \ On the other hand, the Edge-API is a specific backend API to manage Kubernetes\
    \ resources and deploy application instances into the cluster."
  contact:
    name: Vicomtech
    email: mdalgitsis@vicomtech.org
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.2
externalDocs:
  description: Find out more about BIND5G porject
  url: http://bind5g.test
servers:
- url: http://localhost:8084
- url: https://localhost:8084
tags:
- name: cluster
  description: Operations about your cluster
- name: namespaces
  description: Operations about your namespaces
- name: Kubernetes Network Service
  description: Kubernetes Network Services (KNS) to deploy Helm Charts through Open-Source
    MANO (OSM)
paths:
  /cluster/nodes:
    get:
      tags:
      - cluster
      summary: List the existing Nodes of the cluster
      description: Returns a list of all cluster Nodes
      operationId: get_nodes
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              examples:
                List of Nodes:
                  value: "{\n\t\"List of Node names\": [\n\t\t\"michalis-instance-mec\"\
                    \n\t]\n}"
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "404":
          description: Resource not found
      x-openapi-router-controller: swagger_server.controllers.cluster_controller
  /cluster/nodes/{node_name}/status:
    get:
      tags:
      - cluster
      summary: Get a specific Node
      description: Returns the status and the IP information of the Node
      operationId: get_node_status
      parameters:
      - name: node_name
        in: path
        description: name of Node
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: bind5g-mec
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              examples:
                List of Nodes:
                  value:
                    Node name: bind5g-mec
                    Status: Node-status
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "404":
          description: Resource not found
      x-openapi-router-controller: swagger_server.controllers.cluster_controller
  /cluster/pods:
    get:
      tags:
      - cluster
      summary: List Pods for all Namespaces
      description: Returns a list of all Pods of the Kubernetes cluster
      operationId: get_all_pods
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              examples:
                List of all Pods:
                  value: "{\n\t\"List of all pod names\": [\n\t\t\"pod_name_1\",\n\
                    \t\t\"pod_name_2\",\n\t\t\"pod_name_3\",\n\n\"pod_name_4\",\n\n\
                    \"....\"\n\t\t\n\t]\n}"
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "404":
          description: Resource not found
      x-openapi-router-controller: swagger_server.controllers.cluster_controller
  /cluster/deployments:
    get:
      tags:
      - cluster
      summary: List Deployments for all Namespaces
      description: Returns a list of all Deployment names of the Kubernetes cluster
      operationId: get_all_deployments
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              examples:
                List all Deployments:
                  value: "{\n\t\"List of all Deployment names\": [\n\t\t\"deployment_name_1\"\
                    ,\n\t\t\"deployment_name_2\",\n\t\t\"deployment_name_3\",\n\t\t\
                    \"deployment_name_4\",\n\t\t\"....\"\n\t]\n}"
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "404":
          description: Resource not found
      x-openapi-router-controller: swagger_server.controllers.cluster_controller
  /cluster/services:
    get:
      tags:
      - cluster
      summary: List Services for all Namespaces
      description: Returns a list of all Services of the Kubernetes cluster
      operationId: get_all_services
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              examples:
                List all Services:
                  value: "{\n\t\"List of all Service names\": [\n\t\t\"service_name_1\"\
                    ,\n\t\t\"service_name_2\",\n\t\t\"service_name_3\",\n\t\t\"service_name_4\"\
                    ,\n\t\t\"....\"\n\t]\n}"
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "404":
          description: Resource not found
      x-openapi-router-controller: swagger_server.controllers.cluster_controller
  /cluster/servicemonitors:
    get:
      tags:
      - cluster
      summary: List ServiceMonitors for all Namespaces
      description: Returns a list of all ServiceMonitors of the Kubernetes cluster
      operationId: get_all_service_monitors
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              examples:
                List all Services:
                  value: "{\n\t\"List of all ServiceMonitor names\": [\n\t\t\"servicemonitor_name_1\"\
                    ,\n\t\t\"servicemonitor_name_2\",\n\t\t\"servicemonitor_name_3\"\
                    ,\n\t\t\"servicemonitor_name_4\",\n\t\t\"....\"\n\t]\n}"
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "404":
          description: Resource not found
      x-openapi-router-controller: swagger_server.controllers.cluster_controller
  /cluster/resourcequotas:
    get:
      tags:
      - cluster
      summary: List ResourceQuotas for all Namespaces
      description: Returns a list of all ResourceQuotas of the Kubernetes cluster
      operationId: get_all_resource_quotas
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              examples:
                List all Services:
                  value: "{\n\t\"List of all ResourceQuota names\": [\n\t\t\"resourcequota_name_1\"\
                    ,\n\t\t\"resourcequota_name_2\",\n\t\t\"resourcequota_name_3\"\
                    ,\n\t\t\"resourcequota_name_4\",\n\t\t\"....\"\n\t]\n}"
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "404":
          description: Resource not found
      x-openapi-router-controller: swagger_server.controllers.cluster_controller
  /cluster/limitranges:
    get:
      tags:
      - cluster
      summary: List LimitRanges for all Namespaces
      description: Returns a list of all LimitRanges of the Kubernetes cluster
      operationId: get_all_limit_ranges
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              examples:
                List all Services:
                  value: "{\n\t\"List of all LimitRange names\": [\n\t\t\"limitrange_name_1\"\
                    ,\n\t\t\"limitrange_name_2\",\n\t\t\"limitrange_name_3\",\n\t\t\
                    \"limitrange_name_4\",\n\t\t\"....\"\n\t]\n}"
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "404":
          description: Resource not found
      x-openapi-router-controller: swagger_server.controllers.cluster_controller
  /namespaces:
    summary: Namespaces
    description: Namespaces
    get:
      tags:
      - namespaces
      summary: List all Namespaces
      description: Returns a list of all Namespaces in the cluster
      operationId: get_namespaces
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              examples:
                List all namespaces:
                  value: "{\n\t\"List of all Namespace names\": [\n\t\t\"namespace_name_1\"\
                    ,\n\t\t\"namespace_name_2\",\n\t\t\"namespace_name_3\",\n\t\t\"\
                    namespace_name_4\",\n\t\t\"....\"\n\t\t]\n}"
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "404":
          description: Resource not found
      x-openapi-router-controller: swagger_server.controllers.namespaces_controller
    post:
      tags:
      - namespaces
      summary: Create a Namespace
      description: Create a Namespace
      operationId: add_namespace
      requestBody:
        description: Namespace object that contains the name to create a Namespace
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Namespace'
        required: true
      responses:
        "201":
          description: Namespace created
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "405":
          description: Invalid input
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.namespaces_controller
  /namespaces/{namespace_name}:
    delete:
      tags:
      - namespaces
      summary: Delete a Namespace
      description: Delete a Namespace
      operationId: delete_namespace
      parameters:
      - name: namespace_name
        in: path
        description: name of Namespace to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: test-namespace
      responses:
        "204":
          description: Namespace deleted
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "404":
          description: Resource not found
      x-openapi-router-controller: swagger_server.controllers.namespaces_controller
  /namespaces/{namespace_name}/pods:
    get:
      tags:
      - namespaces
      summary: List Pods by Namespace
      description: Returns a list with all the Pods in a specific Namespace
      operationId: get_namespaced_pods
      parameters:
      - name: namespace_name
        in: path
        description: name of Namespace to retrieve the Pods
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: default
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              examples:
                List Pods from the default namespace:
                  value:
                    Namespace: default
                    List of pod names:
                    - pod_name_1
                    - pod_name_2
                    - pod_name_3
                    - pod_name_4
                    - '....'
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "404":
          description: Resource not found
      x-openapi-router-controller: swagger_server.controllers.namespaces_controller
    post:
      tags:
      - namespaces
      summary: Create a Pod in a Namespace
      description: Create a Pod in a specific Namespace
      operationId: add_namespaced_pod
      parameters:
      - name: namespace_name
        in: path
        description: name of Namespace to create a Pod
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: default
      requestBody:
        description: Pod object that contains the key-value pairs to create a pod.
          **Note:** pod_name for good practices should contain only lowercase alphanumeric
          characters with or without '-'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pod'
        required: true
      responses:
        "201":
          description: Pod created
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "405":
          description: Invalid input
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.namespaces_controller
  /namespaces/{namespace_name}/pods/{pod_name}/logs:
    summary: Logs of a namespaced Pod
    description: Logs of a namespaced Pod
    get:
      tags:
      - namespaces
      summary: Get logs of a namespaced Pod
      description: Get logs of a namespaced Pod
      operationId: get_namespaced_pod_logs
      parameters:
      - name: namespace_name
        in: path
        description: name of Namespace where the pod lives
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: default
      - name: pod_name
        in: path
        description: name of Pod to return the logs
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: nginx-test-pod
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              examples:
                Logs from a pod in default namespace:
                  value:
                    Namespace: default
                    Pod name: nginx-test-pod
                    Pod logs: here are the logs of the pod...
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "404":
          description: Resource not found
      x-openapi-router-controller: swagger_server.controllers.namespaces_controller
  /namespaces/{namespace_name}/pods/{pod_name}:
    delete:
      tags:
      - namespaces
      summary: Delete a Pod from a specific Namespace
      description: Delete a namespaced Pod
      operationId: delete_namespaced_pod
      parameters:
      - name: namespace_name
        in: path
        description: name of Namespace where the Pod lives
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: default
      - name: pod_name
        in: path
        description: name of Pod to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: nginx-test-pod
      responses:
        "204":
          description: Pod deleted
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "404":
          description: Resource not found
      x-openapi-router-controller: swagger_server.controllers.namespaces_controller
  /namespaces/{namespace_name}/deployments:
    get:
      tags:
      - namespaces
      summary: List Deployments of a specific Namespace
      description: Returns a list with the names of the Deployments of a specific
        namespace
      operationId: get_namespaced_deployments
      parameters:
      - name: namespace_name
        in: path
        description: name of Namespace to retrieve the Deployment-resources
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: default
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              examples:
                List Deployments from the default namespace:
                  value:
                    Namespace: default
                    List of Deployment names:
                    - deployment_name_1
                    - deployment_name_2
                    - deployment_name_3
                    - deployment_name_4
                    - '....'
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "404":
          description: Resource not found
      x-openapi-router-controller: swagger_server.controllers.namespaces_controller
    post:
      tags:
      - namespaces
      summary: Create a Deployment in a specific namespace
      description: Create a namespaced Deployment Kubernetes-resource
      operationId: add_namespaced_deployment
      parameters:
      - name: namespace_name
        in: path
        description: name of Namespace to create a Deployment
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: default
      requestBody:
        description: "Deployment object that needs to be added to create a Deployment-resource\
          \ in the cluster. **Note:** If you specify a limit for a resource, but do\
          \ not specify any request, then Kubernetes copies the limit you specified\
          \ and uses it as the requested value for the resource.  Also, replicas_number\
          \ must be >= 1 and deployment_name must contain only lowercase alphanumeric\
          \ characters or '-'."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deployment'
        required: true
      responses:
        "201":
          description: Deployment created
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "405":
          description: Invalid input
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.namespaces_controller
  /namespaces/{namespace_name}/deployments/{deployment_name}:
    get:
      tags:
      - namespaces
      summary: Read a namespaced Deployment definition
      description: Returns the definition of a single Deployment by deployment_name
        in a specific namespace
      operationId: get_namespaced_deployment
      parameters:
      - name: namespace_name
        in: path
        description: name of Namespace where the Deployment lives
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: default
      - name: deployment_name
        in: path
        description: name of Deployment to retrieve
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: nginx-deployment
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              examples:
                Show an nginx Deployment manifest:
                  value:
                    apiVersion: apps/v1
                    kind: Deployment
                    metadata:
                      name: nginx-deployment
                      labels:
                        app: nginx
                    spec:
                      replicas: 3
                      selector:
                        matchLabels:
                          app: nginx
                      template:
                        metadata:
                          labels:
                            app: nginx
                        spec:
                          containers:
                          - name: nginx
                            image: nginx:1.7.9
                            ports:
                            - containerPort: 80
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "404":
          description: Resource not found
      x-openapi-router-controller: swagger_server.controllers.namespaces_controller
    delete:
      tags:
      - namespaces
      summary: Delete a namespaced Deployment
      description: Delete a namespaced Deployment
      operationId: delete_namespaced_deployment
      parameters:
      - name: namespace_name
        in: path
        description: name of namespace where the Deployment lives
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: default
      - name: deployment_name
        in: path
        description: name of Deployment to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: nginx-deployment
      responses:
        "204":
          description: Deployment deleted
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "404":
          description: Resource not found
      x-openapi-router-controller: swagger_server.controllers.namespaces_controller
  /namespaces/{namespace_name}/deployments/{deployment_name}/status:
    get:
      tags:
      - namespaces
      summary: Read namespaced Deployment status
      description: Read status of the specified Deployment
      operationId: get_namespaced_deployment_status
      parameters:
      - name: namespace_name
        in: path
        description: name of namespace where the Deployment lives
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: default
      - name: deployment_name
        in: path
        description: name of Deployment to show its status
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: nginx-deployment
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "404":
          description: Resource not found
      x-openapi-router-controller: swagger_server.controllers.namespaces_controller
  /namespaces/{namespace_name}/deployments/{deployment_name}/scaleHorizontal:
    put:
      tags:
      - namespaces
      summary: Scale Horizontal a namespaced Deployment
      description: Scale either up or down the pods of a namespaced Deployment
      operationId: scale_horizontal_namespaced_deployment
      parameters:
      - name: namespace_name
        in: path
        description: name of namespace where the Deployment lives
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: default
      - name: deployment_name
        in: path
        description: name of Deployment to scale horizontically
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: nginx-deployment
      requestBody:
        description: "Scale Horizontal object that needs to be added to a namespaced\
          \ Deployment in order to scale up or down the pods (containers) it contains.\
          \ **Note:** if replicas_number = 0, then we kill all the pods of the Deployment."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScaleHorizontal'
        required: true
      responses:
        "200":
          description: Deployment scaled horizontically
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "405":
          description: Invalid input
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.namespaces_controller
  /namespaces/{namespace_name}/deployments/{deployment_name}/replicas:
    get:
      tags:
      - namespaces
      summary: Read namespaced Deployment Scale replicas
      description: Read replicas of the Scale definition of the specified Deployment
      operationId: get_namespaced_deployment_scale_replicas
      parameters:
      - name: namespace_name
        in: path
        description: name of namespace where the Deployment lives
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: default
      - name: deployment_name
        in: path
        description: name of Deployment to show the number of replicas
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: nginx-deployment
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              examples:
                List replicas from the nginx-deployment in the default namespace:
                  value:
                    apiVersion: autoscaling/v1
                    kind: Scale
                    metadata:
                      creationTimestamp: 2022-04-28T13:55:14+00:00
                      name: nginx-deployment
                      namespace: default
                      resourceVersion: "17841188"
                      uid: 144f9422-a529-47b4-a9fa-543dda04cb97
                    spec:
                      replicas: 3
                    status:
                      replicas: 3
                      selector: app=nginx
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "404":
          description: Resource not found
      x-openapi-router-controller: swagger_server.controllers.namespaces_controller
  /namespaces/{namespace_name}/deployments/{deployment_name}/resources:
    get:
      tags:
      - namespaces
      summary: Read namespaced Deployment resources
      description: Read resources in terms of CPU and memory of the specified Deployment
      operationId: get_namespaced_deployment_resources
      parameters:
      - name: namespace_name
        in: path
        description: name of namespace where the Deployment lives
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: default
      - name: deployment_name
        in: path
        description: name of Deployment to show the resources
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: nginx-deployment
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              examples:
                List resources from the nginx-deployment in the default namespace:
                  value:
                    limits:
                      cpu: 110m
                      memory: 45Mi
                    requests:
                      cpu: 55m
                      memory: 24Mi
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "404":
          description: Resource not found
      x-openapi-router-controller: swagger_server.controllers.namespaces_controller
  /namespaces/{namespace_name}/deployments/{deployment_name}/{container_name}/scaleVertical:
    patch:
      tags:
      - namespaces
      summary: Scale Vertical a namespaced Deployment
      description: Partialy update a namespaced Deployment - Vertical scaling. The
        update affects the pod-container resources such as CPU and memory.
      operationId: scale_vertical_namespaced_deployment
      parameters:
      - name: namespace_name
        in: path
        description: name of namespace where the Deployment lives
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: default
      - name: deployment_name
        in: path
        description: name of Deployment to scale vertically
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: nginx-deployment
      - name: container_name
        in: path
        description: name of container of the Deployment to scale vertically
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: nginx
      requestBody:
        description: "ScaleVertical object that needs to be added to a namespaced\
          \ Deployment in the cluster to perform vertical scaling. **Note:** If you\
          \ specify a limit for a resource, but do not specify any request, then Kubernetes\
          \ copies the limit you specified and uses it as the requested value for\
          \ the resource."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScaleVertical'
        required: true
      responses:
        "200":
          description: Deployment scaled vertically
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "404":
          description: Resource not found
        "405":
          description: Invalid input
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.namespaces_controller
  /namespaces/{namespace_name}/services:
    get:
      tags:
      - namespaces
      summary: List Services by namespace
      description: Returns a list with all the Services in a specific namespace
      operationId: get_namespaced_services
      parameters:
      - name: namespace_name
        in: path
        description: name of namespace to retrieve the Services
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: default
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              examples:
                List Services from the default namespace:
                  value:
                    Namespace: default
                    List of service names:
                    - service_name_1
                    - service_name_2
                    - service_name_3
                    - service_name_4
                    - '....'
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "404":
          description: Resource not found
      x-openapi-router-controller: swagger_server.controllers.namespaces_controller
    post:
      tags:
      - namespaces
      summary: Create a Service in a specific namespace
      description: Create a namespaced Service Kubernetes-resource
      operationId: add_namespaced_service
      parameters:
      - name: namespace_name
        in: path
        description: name of namespace to create a Service
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: default
      requestBody:
        description: "Service object that needs to be added to expose Pod-resources\
          \ in or out the cluster. **Note:** service_name must contain only lowercase\
          \ alphanumeric characters or '-'.  The Service selector should match the\
          \ label of the pod. The Service targetPort should match the container_port\
          \ of the container inside the Pod. If service_type is ClusterIP, nodePort\
          \ value must be set null in the service_port variable. Finally port_name\
          \ is also optional."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
        required: true
      responses:
        "201":
          description: Service created
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "405":
          description: Invalid input
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.namespaces_controller
  /namespaces/{namespace_name}/services/{service_name}:
    get:
      tags:
      - namespaces
      summary: Read a namespaced Service definition
      description: Returns the definition of a single Service by service_name in a
        specific namespace
      operationId: get_namespaced_service
      parameters:
      - name: namespace_name
        in: path
        description: name of namespace where the Service lives
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: default
      - name: service_name
        in: path
        description: name of Service to retrieve
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: nginx-service
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              examples:
                Show an nginx Service definition:
                  value:
                    apiVersion: v1
                    kind: Service
                    metadata:
                      name: nginx-service
                    spec:
                      selector:
                        app: nginx
                      ports:
                      - protocol: TCP
                        port: 80
                        targetPort: 80
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "404":
          description: Resource not found
      x-openapi-router-controller: swagger_server.controllers.namespaces_controller
    delete:
      tags:
      - namespaces
      summary: Delete a namespaced Service
      description: Delete a namespaced Service
      operationId: delete_namespaced_service
      parameters:
      - name: namespace_name
        in: path
        description: name of namespace where the Service lives
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: default
      - name: service_name
        in: path
        description: name of Service to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: nginx-service
      responses:
        "204":
          description: Service deleted
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "404":
          description: Resource not found
      x-openapi-router-controller: swagger_server.controllers.namespaces_controller
  /namespaces/{namespace_name}/services/{service_name}/status:
    get:
      tags:
      - namespaces
      summary: Read namespaced Service status
      description: "Read the status of the specified Service, like the Internal service\
        \ IP, the External Service IP, the service ports and the service type."
      operationId: get_namespaced_service_status
      parameters:
      - name: namespace_name
        in: path
        description: name of namespace where the Service lives
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: default
      - name: service_name
        in: path
        description: name of Service to show its status
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: nginx-service
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "404":
          description: Resource not found
      x-openapi-router-controller: swagger_server.controllers.namespaces_controller
  /namespaces/{namespace_name}/servicemonitors:
    get:
      tags:
      - namespaces
      summary: List ServiceMonitors by namespace
      description: Returns a list with all the ServiceMonitors in a specific namespace
      operationId: get_namespaced_service_monitors
      parameters:
      - name: namespace_name
        in: path
        description: name of namespace to retrieve the ServiceMonitors
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: default
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              examples:
                List ServiceMonitors from the default namespace:
                  value:
                    Namespace: default
                    List of servicemonitor names:
                    - servicemonitor_name_1
                    - servicemonitor_name_2
                    - servicemonitor_name_3
                    - servicemonitor_name_4
                    - '....'
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "404":
          description: Resource not found
      x-openapi-router-controller: swagger_server.controllers.namespaces_controller
    post:
      tags:
      - namespaces
      summary: Create a ServiceMonitor in a specific namespace
      description: Create a namespaced ServiceMonitor Custom Kubernetes-resource
      operationId: add_namespaced_service_monitor
      parameters:
      - name: namespace_name
        in: path
        description: name of namespace to create a ServiceMonitor
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: default
      requestBody:
        description: "ServiceMonitor Custom object that needs to be added to expose\
          \ Pod-resources in the Prometheus server. **Note:** service_name must contain\
          \ only lowercase alphanumeric characters or '-'.  The Service selector should\
          \ match the label of the pod. The endpoints should match the Service port\
          \ names. A release label must exist wit the value of the Prometheus name.\
          \ If Prometheus is installed by a helm chart, the release value is the helm\
          \ release name."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceMonitor'
        required: true
      responses:
        "201":
          description: ServiceMonitor created
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "405":
          description: Invalid input
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.namespaces_controller
  /namespaces/{namespace_name}/servicemonitors/{servicemonitor_name}:
    get:
      tags:
      - namespaces
      summary: Read a namespaced ServiceMonitor definition
      description: Returns the definition of a single ServiceMonitor by servicemonitor_name
        in a specific namespace
      operationId: get_namespaced_service_monitor
      parameters:
      - name: namespace_name
        in: path
        description: name of namespace where the ServiceMonitor lives
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: default
      - name: servicemonitor_name
        in: path
        description: name of ServiceMonitor to retrieve
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: exporter-servicemonitor
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              examples:
                Show a ServiceMonitor definition:
                  value:
                    apiVersion: monitoring.coreos.com/v1
                    kind: ServiceMonitor
                    metadata:
                      labels:
                        app: exporter-servicemonitor
                        release: prometheus-mec
                      name: exporter-servicemonitor
                      namespace: default
                    spec:
                      endpoints:
                      - interval: 30s
                        path: /metrics
                        port: metrics
                      selector:
                        matchLabels:
                          app: exporter-servicemonitor
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "404":
          description: Resource not found
      x-openapi-router-controller: swagger_server.controllers.namespaces_controller
    delete:
      tags:
      - namespaces
      summary: Delete a namespaced ServiceMonitor
      description: Delete a namespaced ServiceMonitor
      operationId: delete_namespaced_service_monitor
      parameters:
      - name: namespace_name
        in: path
        description: name of namespace where the ServiceMonitor lives
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: default
      - name: servicemonitor_name
        in: path
        description: name of ServiceMonitor to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: exporter-servicemonitor
      responses:
        "204":
          description: ServiceMonitor deleted
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "404":
          description: Resource not found
      x-openapi-router-controller: swagger_server.controllers.namespaces_controller
  /namespaces/{namespace_name}/resourcequotas:
    get:
      tags:
      - namespaces
      summary: List ResourceQuotas by namespace
      description: Returns a list with all the ResourceQuotas in a specific namespace
      operationId: get_namespaced_resource_quotas
      parameters:
      - name: namespace_name
        in: path
        description: name of namespace to retrieve the ResourceQuotas
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: default
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              examples:
                List ResourceQuotas from the default namespace:
                  value:
                    Namespace: default
                    List of resourcequota names:
                    - resourcequota_name_1
                    - resourcequota_name_2
                    - resourcequota_name_3
                    - resourcequota_name_4
                    - '....'
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "404":
          description: Resource not found
      x-openapi-router-controller: swagger_server.controllers.namespaces_controller
    post:
      tags:
      - namespaces
      summary: Create a ResourceQuota in a specific namespace
      description: Create a namespaced ResourceQuota Kubernetes-resource
      operationId: add_namespaced_resource_quota
      parameters:
      - name: namespace_name
        in: path
        description: name of namespace to create a ResourceQuota
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: default
      requestBody:
        description: "Resourcequotas reserve cpu,memory and storage resources in the\
          \ specified namespaces."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceQuota'
        required: true
      responses:
        "201":
          description: ResourceQuota created
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "405":
          description: Invalid input
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.namespaces_controller
  /namespaces/{namespace_name}/resourcequotas/{resourcequota_name}:
    get:
      tags:
      - namespaces
      summary: Read a namespaced ResourceQuota definition
      description: Returns the definition of a single ResourceQuota by resourcequota_name
        in a specific namespace
      operationId: get_namespaced_resource_quota
      parameters:
      - name: namespace_name
        in: path
        description: name of namespace where the ResourceQuota lives
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: default
      - name: resourcequota_name
        in: path
        description: name of ResourceQuota to retrieve
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: quota-test
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              examples:
                Show a ResourceQuota definition:
                  value:
                    apiVersion: v1
                    kind: ResourceQuota
                    metadata:
                      name: quota-test
                      namespace: default
                    spec:
                      hard:
                        limits.cpu: 1000m
                        requests.cpu: 500m
                    status:
                      hard:
                        limits.cpu: 1000m
                        requests.cpu: 500m
                      used:
                        limits.cpu: "0"
                        requests.cpu: "0"
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "404":
          description: Resource not found
      x-openapi-router-controller: swagger_server.controllers.namespaces_controller
    delete:
      tags:
      - namespaces
      summary: Delete a namespaced ResourceQuota
      description: Delete a namespaced ResourceQuota
      operationId: delete_namespaced_resource_quota
      parameters:
      - name: namespace_name
        in: path
        description: name of namespace where the ResourceQuota lives
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: default
      - name: resourcequota_name
        in: path
        description: name of ResourceQuota to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: quota-test
      responses:
        "204":
          description: ResourceQuota deleted
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "404":
          description: Resource not found
      x-openapi-router-controller: swagger_server.controllers.namespaces_controller
  /namespaces/{namespace_name}/limitranges:
    get:
      tags:
      - namespaces
      summary: List LimitRanges by namespace
      description: Returns a list with all the LimitRanges in a specific namespace
      operationId: get_namespaced_limit_ranges
      parameters:
      - name: namespace_name
        in: path
        description: name of namespace to retrieve the LimitRanges
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: default
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              examples:
                List LimitRanges from the default namespace:
                  value:
                    Namespace: default
                    List of limitrange names:
                    - limitrange_name_1
                    - limitrange_name_2
                    - limitrange_name_3
                    - limitrange_name_4
                    - '....'
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "404":
          description: Resource not found
      x-openapi-router-controller: swagger_server.controllers.namespaces_controller
    post:
      tags:
      - namespaces
      summary: Create a LimitRange in a specific namespace
      description: Create a namespaced LimitRange Kubernetes-resource
      operationId: add_namespaced_limit_range
      parameters:
      - name: namespace_name
        in: path
        description: name of namespace to create a LimitRange
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: default
      requestBody:
        description: LimitRanges pose default cpu and memory resource reservation
          in the specified namespaces.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LimitRange'
        required: true
      responses:
        "201":
          description: LimitRange created
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "405":
          description: Invalid input
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.namespaces_controller
  /namespaces/{namespace_name}/limitranges/{limitrange_name}:
    get:
      tags:
      - namespaces
      summary: Read a namespaced LimitRange definition
      description: Returns the definition of a single LimitRange by limitrange_name
        in a specific namespace
      operationId: get_namespaced_limit_range
      parameters:
      - name: namespace_name
        in: path
        description: name of namespace where the LimitRange lives
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: default
      - name: limitrange_name
        in: path
        description: name of LimitRange to retrieve
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: limit-test
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              examples:
                Show a LimitRange definition:
                  value:
                    apiVersion: v1
                    kind: LimitRange
                    metadata:
                      name: limit-test
                    spec:
                      limits:
                      - default:
                          memory: 512Mi
                        defaultRequest:
                          memory: 256Mi
                        type: Container
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "404":
          description: Resource not found
      x-openapi-router-controller: swagger_server.controllers.namespaces_controller
    delete:
      tags:
      - namespaces
      summary: Delete a namespaced LimitRange
      description: Delete a namespaced LimitRange
      operationId: delete_namespaced_limit_range
      parameters:
      - name: namespace_name
        in: path
        description: name of namespace where the LimitRange lives
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: default
      - name: limitrange_name
        in: path
        description: name of LimitRange to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: limit-test
      responses:
        "204":
          description: LimitRange deleted
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "404":
          description: Resource not found
      x-openapi-router-controller: swagger_server.controllers.namespaces_controller
  /kns:
    get:
      tags:
      - Kubernetes Network Service
      summary: List Kubernetes Network Services
      description: Returns a list with all the KNS running in OSM
      operationId: get_all_kns
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              examples:
                List KNS from the OPEN-Source MANO platform:
                  value:
                    List of KNS names:
                    - KNS 1
                    - KNS 2
                    - KNS 3
                    - KNS 4
                    - '....'
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "404":
          description: Resource not found
      x-openapi-router-controller: swagger_server.controllers.kubernetes_network_service_controller
    post:
      tags:
      - Kubernetes Network Service
      summary: Create a Kubernetes Network Service
      description: Create a KNS in OSM
      operationId: add_kns
      requestBody:
        description: Body request that contains the key-value pairs to create a KNS.
          **Note:** a note comes here
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KNS'
        required: true
      responses:
        "201":
          description: KNS created
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "405":
          description: Invalid input
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.kubernetes_network_service_controller
  /kns/{kns_name}:
    get:
      tags:
      - Kubernetes Network Service
      summary: Get a Kubernetes Network Service
      description: Returns a KNS running in OSM
      operationId: get_kns
      parameters:
      - name: kns_name
        in: path
        description: Name of the KNS
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: iot-streaming
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              examples:
                KNS specific information:
                  value:
                    KNS information: {}
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "404":
          description: Resource not found
      x-openapi-router-controller: swagger_server.controllers.kubernetes_network_service_controller
    delete:
      tags:
      - Kubernetes Network Service
      summary: Delete a Kubernetes Network Service
      description: Delete a KNS in OSM
      operationId: delete_kns
      parameters:
      - name: kns_name
        in: path
        description: Name of the KNS
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: iot-streaming
      responses:
        "201":
          description: KNS deleted
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "405":
          description: Invalid input
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.kubernetes_network_service_controller
  /kns/{kns_name}/day2actions:
    post:
      tags:
      - Kubernetes Network Service
      summary: Day2Actions in a Kubernetes Network Service
      description: Performs Day2Actions in a KNS in OSM
      operationId: update_kns
      parameters:
      - name: kns_name
        in: path
        description: Name of the KNS
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: iot-streaming
      - name: nsd_name
        in: query
        description: Name of the ND Descriptor
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: iot_streaming_ns
      - name: vim_name
        in: query
        description: Name of the VIM
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: bind5g-vim
      - name: k8s_namespace
        in: query
        description: Name of the Namespace in Kubernetes (K8s)
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: default
      requestBody:
        description: Body request that contains the key-value pairs to update a KNS.
          **Note:** a note comes here
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KNSDay2Actions'
        required: true
      responses:
        "201":
          description: KNS updated
        "400":
          description: Bad request
        "401":
          description: The request requires user authentication.
        "403":
          description: "The server understood the request, but it is refusing to authorize\
            \ it."
        "405":
          description: Invalid input
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.kubernetes_network_service_controller
components:
  schemas:
    KNS:
      required:
      - k8s_namespace
      - kns_name
      - nsd_name
      - vim_name
      type: object
      properties:
        kns_name:
          type: string
          example: iot-streaming
        nsd_name:
          type: string
          description: name of ns descriptor in OSM NS Packages
          example: iot_streaming_ns
        vim_name:
          type: string
          example: bind5g-vim
        k8s_namespace:
          type: string
          example: default
    KNSDay2Actions:
      required:
      - kdu-name
      - member-vnf-index
      type: object
      properties:
        member-vnf-index:
          type: string
          example: "1"
        kdu-name:
          type: string
          example: iot-streaming
        additional_params:
          type: object
    Pod:
      required:
      - container_name
      - image_name
      - pod_name
      type: object
      properties:
        pod_name:
          type: string
          example: nginx-test-pod
        container_name:
          type: string
          example: nginx
        image_name:
          type: string
          example: nginx
    Deployment:
      required:
      - container_name
      - container_port
      - deployment_name
      - deployment_selector
      - image_name
      - pod_label
      type: object
      properties:
        deployment_name:
          type: string
          example: nginx-deployment
        container_name:
          type: string
          example: nginx
        image_name:
          type: string
          example: nginx:1.7.9
        container_port:
          type: array
          example:
          - 80
          - 3000
          items:
            type: integer
        container_resource_limits_cpu_value:
          type: string
          description: CPU resources are measured in milLiCPU units
          example: 100m
        container_resource_limits_memory_value:
          type: string
          description: Memory is measured in bytes.
          example: 64Mi
        container_resource_requests_cpu_value:
          type: string
          description: CPU resources are measured in milLiCPU units
          example: 50m
        container_resource_requests_memory_value:
          type: string
          description: Memory is measured in bytes.
          example: 32Mi
        pod_label:
          type: object
          example: {}
        deployment_selector:
          type: object
          example: {}
        deployment_label:
          type: object
          example: {}
        replicas_number:
          type: integer
          format: int64
          example: 3
        env:
          type: array
          example:
          - - name: test-name1
            - value: test-value1
          items:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                value:
                  type: string
        volume_name:
          type: array
          items:
            type: string
        container_path:
          type: array
          items:
            type: string
        host_path:
          type: array
          items:
            type: string
      description: "<H5>CPU</h5> In Kubernetes, 1 CPU unit is equivalent to 1 physical\
        \ CPU core, or 1 virtual core, depending on whether the node is a physical\
        \ host or a virtual machine running inside a physical machine. When you define\
        \ a container with cpu set to 0.5, you are requesting half as much CPU time\
        \ compared to if you asked for 1.0 CPU. For CPU resource units, the quantity\
        \ expression 0.1 is equivalent to the expression 100m, which can be read as\
        \ \"one hundred millicpu\". Some people say \"one hundred millicores\", and\
        \ this is understood to mean the same thing. **Note1:** CPU resource is always\
        \ specified as an absolute amount of resource, never as a relative amount.\
        \ For example, 500m CPU represents the roughly same amount of computing power\
        \ whether that container runs on a single-core, dual-core, or 48-core machine.\
        \ **Note2:** Kubernetes doesn't allow you to specify CPU resources with a\
        \ precision finer than 1m. Because of this, it's useful to specify CPU units\
        \ less than 1.0 or 1000m using the milliCPU form; for example, 5m rather than\
        \ 0.005. <H5>MEMORY</h5> You can express memory as a plain integer or as a\
        \ fixed-point number using one of these quantity suffixes such as E, P, T,\
        \ G, M, k. You can also use the power-of-two equivalents such as Ei, Pi, Ti,\
        \ Gi, Mi, Ki. For example, the following represent roughly the same value\
        \ 128974848, 129e6, 129M, 128974848000m, 123Mi. Pay attention to the case\
        \ of the suffixes. If you request 400m of memory, this is a request for 0.4\
        \ bytes. And if someone typed 400Mi or 400M, that probably meant to ask for\
        \ 400 mebibytes (400Mi) or 400 megabytes (400M), respectively. Because of\
        \ this, and to elliminate confusion in the input values of the API, the mebibyte\
        \ form (Mi) is preferred."
    Service:
      required:
      - service_name
      - service_port
      - service_selector
      - service_type
      type: object
      properties:
        service_name:
          type: string
          example: nginx-service
        service_selector:
          type: object
          example: {}
        service_label:
          type: object
          example: {}
        service_port:
          type: array
          example:
          - - port: 8080
            - targetPort: 8080
            - name: external
            - {}
          - - port: 85
            - targetPort: 85
            - name: internal
            - {}
          items:
            type: array
            items:
              type: object
              properties:
                port:
                  type: integer
                targetPort:
                  type: integer
                name:
                  type: string
                  nullable: true
                nodePort:
                  type: integer
                  nullable: true
        service_type:
          type: string
          description: Service types
          example: ClusterIP
          enum:
          - ClusterIP
          - LoadBalancer
          - Ingress
          - NodePort
    Namespace:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          example: web-apps
    ScaleHorizontal:
      required:
      - replicas_number
      type: object
      properties:
        replicas_number:
          type: integer
          format: int64
          example: 5
    ScaleVertical:
      required:
      - container_resource_limits_cpu_value
      - container_resource_limits_memory_value
      - container_resource_requests_cpu_value
      - container_resource_requests_memory_value
      - deployment_selector
      type: object
      properties:
        container_resource_limits_cpu_value:
          type: string
          description: CPU resources are measured in milLiCPU units
          example: 100m
        container_resource_limits_memory_value:
          type: string
          description: Memory is measured in bytes.
          example: 64Mi
        container_resource_requests_cpu_value:
          type: string
          description: CPU resources are measured in milLiCPU units
          example: 50m
        container_resource_requests_memory_value:
          type: string
          description: Memory is measured in bytes.
          example: 32Mi
        deployment_selector:
          type: object
          example: {}
      description: "<H5>CPU</h5> In Kubernetes, 1 CPU unit is equivalent to 1 physical\
        \ CPU core, or 1 virtual core, depending on whether the node is a physical\
        \ host or a virtual machine running inside a physical machine. When you define\
        \ a container with cpu set to 0.5, you are requesting half as much CPU time\
        \ compared to if you asked for 1.0 CPU. For CPU resource units, the quantity\
        \ expression 0.1 is equivalent to the expression 100m, which can be read as\
        \ \"one hundred millicpu\". Some people say \"one hundred millicores\", and\
        \ this is understood to mean the same thing. **Note1:** CPU resource is always\
        \ specified as an absolute amount of resource, never as a relative amount.\
        \ For example, 500m CPU represents the roughly same amount of computing power\
        \ whether that container runs on a single-core, dual-core, or 48-core machine.\
        \ **Note2:** Kubernetes doesn't allow you to specify CPU resources with a\
        \ precision finer than 1m. Because of this, it's useful to specify CPU units\
        \ less than 1.0 or 1000m using the milliCPU form; for example, 5m rather than\
        \ 0.005. <H5>MEMORY</h5> You can express memory as a plain integer or as a\
        \ fixed-point number using one of these quantity suffixes such as E, P, T,\
        \ G, M, k. You can also use the power-of-two equivalents such as Ei, Pi, Ti,\
        \ Gi, Mi, Ki. For example, the following represent roughly the same value\
        \ 128974848, 129e6, 129M, 128974848000m, 123Mi. Pay attention to the case\
        \ of the suffixes. If you request 400m of memory, this is a request for 0.4\
        \ bytes. And if someone typed 400Mi or 400M, that probably meant to ask for\
        \ 400 mebibytes (400Mi) or 400 megabytes (400M), respectively. Because of\
        \ this, and to elliminate confusion in the input values of the API, the mebibyte\
        \ form (Mi) is preferred."
    ServiceMonitor:
      required:
      - interval
      - prometheus_release_name
      - service_path_name
      - service_port_name
      - servicemonitor_name
      - servicemonitor_selector
      type: object
      properties:
        servicemonitor_name:
          type: string
          example: exporter-servicemonitor
        servicemonitor_selector:
          type: object
          example: {}
        service_port_name:
          type: string
          example: metrics
        service_path_name:
          type: string
          example: /metrics
        prometheus_release_name:
          type: string
          example: prometheus-mec
        interval:
          type: string
          example: 30s
    ResourceQuota:
      required:
      - cpu_limit_value
      - memory_limit_value
      - resourcequota_name
      type: object
      properties:
        resourcequota_name:
          type: string
          example: quota-test
        cpu_limit_value:
          type: string
          example: 1000m
        memory_limit_value:
          type: string
          example: 1Gi
        cpu_request_value:
          type: string
          example: 500m
        memory_request_value:
          type: string
          example: 500Mi
        storage_request_value:
          type: string
          example: 5Gi
    LimitRange:
      required:
      - cpu_default_limit_value
      - cpu_default_request_value
      - limitrange_name
      - memory_default_limit_value
      - memory_default_request_value
      type: object
      properties:
        limitrange_name:
          type: string
          example: limit-test
        cpu_default_limit_value:
          type: string
          example: 200m
        memory_default_limit_value:
          type: string
          example: 100Mi
        cpu_default_request_value:
          type: string
          example: 100m
        memory_default_request_value:
          type: string
          example: 50Mi

