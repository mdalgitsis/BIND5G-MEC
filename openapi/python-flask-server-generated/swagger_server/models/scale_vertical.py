# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ScaleVertical(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, container_resource_limits_cpu_value: str=None, container_resource_limits_memory_value: str=None, container_resource_requests_cpu_value: str=None, container_resource_requests_memory_value: str=None, deployment_selector: object=None):  # noqa: E501
        """ScaleVertical - a model defined in Swagger

        :param container_resource_limits_cpu_value: The container_resource_limits_cpu_value of this ScaleVertical.  # noqa: E501
        :type container_resource_limits_cpu_value: str
        :param container_resource_limits_memory_value: The container_resource_limits_memory_value of this ScaleVertical.  # noqa: E501
        :type container_resource_limits_memory_value: str
        :param container_resource_requests_cpu_value: The container_resource_requests_cpu_value of this ScaleVertical.  # noqa: E501
        :type container_resource_requests_cpu_value: str
        :param container_resource_requests_memory_value: The container_resource_requests_memory_value of this ScaleVertical.  # noqa: E501
        :type container_resource_requests_memory_value: str
        :param deployment_selector: The deployment_selector of this ScaleVertical.  # noqa: E501
        :type deployment_selector: object
        """
        self.swagger_types = {
            'container_resource_limits_cpu_value': str,
            'container_resource_limits_memory_value': str,
            'container_resource_requests_cpu_value': str,
            'container_resource_requests_memory_value': str,
            'deployment_selector': object
        }

        self.attribute_map = {
            'container_resource_limits_cpu_value': 'container_resource_limits_cpu_value',
            'container_resource_limits_memory_value': 'container_resource_limits_memory_value',
            'container_resource_requests_cpu_value': 'container_resource_requests_cpu_value',
            'container_resource_requests_memory_value': 'container_resource_requests_memory_value',
            'deployment_selector': 'deployment_selector'
        }
        self._container_resource_limits_cpu_value = container_resource_limits_cpu_value
        self._container_resource_limits_memory_value = container_resource_limits_memory_value
        self._container_resource_requests_cpu_value = container_resource_requests_cpu_value
        self._container_resource_requests_memory_value = container_resource_requests_memory_value
        self._deployment_selector = deployment_selector

    @classmethod
    def from_dict(cls, dikt) -> 'ScaleVertical':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ScaleVertical of this ScaleVertical.  # noqa: E501
        :rtype: ScaleVertical
        """
        return util.deserialize_model(dikt, cls)

    @property
    def container_resource_limits_cpu_value(self) -> str:
        """Gets the container_resource_limits_cpu_value of this ScaleVertical.

        CPU resources are measured in milLiCPU units  # noqa: E501

        :return: The container_resource_limits_cpu_value of this ScaleVertical.
        :rtype: str
        """
        return self._container_resource_limits_cpu_value

    @container_resource_limits_cpu_value.setter
    def container_resource_limits_cpu_value(self, container_resource_limits_cpu_value: str):
        """Sets the container_resource_limits_cpu_value of this ScaleVertical.

        CPU resources are measured in milLiCPU units  # noqa: E501

        :param container_resource_limits_cpu_value: The container_resource_limits_cpu_value of this ScaleVertical.
        :type container_resource_limits_cpu_value: str
        """
        if container_resource_limits_cpu_value is None:
            raise ValueError("Invalid value for `container_resource_limits_cpu_value`, must not be `None`")  # noqa: E501

        self._container_resource_limits_cpu_value = container_resource_limits_cpu_value

    @property
    def container_resource_limits_memory_value(self) -> str:
        """Gets the container_resource_limits_memory_value of this ScaleVertical.

        Memory is measured in bytes.  # noqa: E501

        :return: The container_resource_limits_memory_value of this ScaleVertical.
        :rtype: str
        """
        return self._container_resource_limits_memory_value

    @container_resource_limits_memory_value.setter
    def container_resource_limits_memory_value(self, container_resource_limits_memory_value: str):
        """Sets the container_resource_limits_memory_value of this ScaleVertical.

        Memory is measured in bytes.  # noqa: E501

        :param container_resource_limits_memory_value: The container_resource_limits_memory_value of this ScaleVertical.
        :type container_resource_limits_memory_value: str
        """
        if container_resource_limits_memory_value is None:
            raise ValueError("Invalid value for `container_resource_limits_memory_value`, must not be `None`")  # noqa: E501

        self._container_resource_limits_memory_value = container_resource_limits_memory_value

    @property
    def container_resource_requests_cpu_value(self) -> str:
        """Gets the container_resource_requests_cpu_value of this ScaleVertical.

        CPU resources are measured in milLiCPU units  # noqa: E501

        :return: The container_resource_requests_cpu_value of this ScaleVertical.
        :rtype: str
        """
        return self._container_resource_requests_cpu_value

    @container_resource_requests_cpu_value.setter
    def container_resource_requests_cpu_value(self, container_resource_requests_cpu_value: str):
        """Sets the container_resource_requests_cpu_value of this ScaleVertical.

        CPU resources are measured in milLiCPU units  # noqa: E501

        :param container_resource_requests_cpu_value: The container_resource_requests_cpu_value of this ScaleVertical.
        :type container_resource_requests_cpu_value: str
        """
        if container_resource_requests_cpu_value is None:
            raise ValueError("Invalid value for `container_resource_requests_cpu_value`, must not be `None`")  # noqa: E501

        self._container_resource_requests_cpu_value = container_resource_requests_cpu_value

    @property
    def container_resource_requests_memory_value(self) -> str:
        """Gets the container_resource_requests_memory_value of this ScaleVertical.

        Memory is measured in bytes.  # noqa: E501

        :return: The container_resource_requests_memory_value of this ScaleVertical.
        :rtype: str
        """
        return self._container_resource_requests_memory_value

    @container_resource_requests_memory_value.setter
    def container_resource_requests_memory_value(self, container_resource_requests_memory_value: str):
        """Sets the container_resource_requests_memory_value of this ScaleVertical.

        Memory is measured in bytes.  # noqa: E501

        :param container_resource_requests_memory_value: The container_resource_requests_memory_value of this ScaleVertical.
        :type container_resource_requests_memory_value: str
        """
        if container_resource_requests_memory_value is None:
            raise ValueError("Invalid value for `container_resource_requests_memory_value`, must not be `None`")  # noqa: E501

        self._container_resource_requests_memory_value = container_resource_requests_memory_value

    @property
    def deployment_selector(self) -> object:
        """Gets the deployment_selector of this ScaleVertical.


        :return: The deployment_selector of this ScaleVertical.
        :rtype: object
        """
        return self._deployment_selector

    @deployment_selector.setter
    def deployment_selector(self, deployment_selector: object):
        """Sets the deployment_selector of this ScaleVertical.


        :param deployment_selector: The deployment_selector of this ScaleVertical.
        :type deployment_selector: object
        """
        if deployment_selector is None:
            raise ValueError("Invalid value for `deployment_selector`, must not be `None`")  # noqa: E501

        self._deployment_selector = deployment_selector
