# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Deployment(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, deployment_name: str=None, container_name: str=None, image_name: str=None, container_port: List[int]=None, container_resource_limits_cpu_value: str=None, container_resource_limits_memory_value: str=None, container_resource_requests_cpu_value: str=None, container_resource_requests_memory_value: str=None, pod_label: object=None, deployment_selector: object=None, deployment_label: object=None, replicas_number: int=None, env: List[List[object]]=None, volume_name: List[str]=None, container_path: List[str]=None, host_path: List[str]=None):  # noqa: E501
        """Deployment - a model defined in Swagger

        :param deployment_name: The deployment_name of this Deployment.  # noqa: E501
        :type deployment_name: str
        :param container_name: The container_name of this Deployment.  # noqa: E501
        :type container_name: str
        :param image_name: The image_name of this Deployment.  # noqa: E501
        :type image_name: str
        :param container_port: The container_port of this Deployment.  # noqa: E501
        :type container_port: List[int]
        :param container_resource_limits_cpu_value: The container_resource_limits_cpu_value of this Deployment.  # noqa: E501
        :type container_resource_limits_cpu_value: str
        :param container_resource_limits_memory_value: The container_resource_limits_memory_value of this Deployment.  # noqa: E501
        :type container_resource_limits_memory_value: str
        :param container_resource_requests_cpu_value: The container_resource_requests_cpu_value of this Deployment.  # noqa: E501
        :type container_resource_requests_cpu_value: str
        :param container_resource_requests_memory_value: The container_resource_requests_memory_value of this Deployment.  # noqa: E501
        :type container_resource_requests_memory_value: str
        :param pod_label: The pod_label of this Deployment.  # noqa: E501
        :type pod_label: object
        :param deployment_selector: The deployment_selector of this Deployment.  # noqa: E501
        :type deployment_selector: object
        :param deployment_label: The deployment_label of this Deployment.  # noqa: E501
        :type deployment_label: object
        :param replicas_number: The replicas_number of this Deployment.  # noqa: E501
        :type replicas_number: int
        :param env: The env of this Deployment.  # noqa: E501
        :type env: List[List[object]]
        :param volume_name: The volume_name of this Deployment.  # noqa: E501
        :type volume_name: List[str]
        :param container_path: The container_path of this Deployment.  # noqa: E501
        :type container_path: List[str]
        :param host_path: The host_path of this Deployment.  # noqa: E501
        :type host_path: List[str]
        """
        self.swagger_types = {
            'deployment_name': str,
            'container_name': str,
            'image_name': str,
            'container_port': List[int],
            'container_resource_limits_cpu_value': str,
            'container_resource_limits_memory_value': str,
            'container_resource_requests_cpu_value': str,
            'container_resource_requests_memory_value': str,
            'pod_label': object,
            'deployment_selector': object,
            'deployment_label': object,
            'replicas_number': int,
            'env': List[List[object]],
            'volume_name': List[str],
            'container_path': List[str],
            'host_path': List[str]
        }

        self.attribute_map = {
            'deployment_name': 'deployment_name',
            'container_name': 'container_name',
            'image_name': 'image_name',
            'container_port': 'container_port',
            'container_resource_limits_cpu_value': 'container_resource_limits_cpu_value',
            'container_resource_limits_memory_value': 'container_resource_limits_memory_value',
            'container_resource_requests_cpu_value': 'container_resource_requests_cpu_value',
            'container_resource_requests_memory_value': 'container_resource_requests_memory_value',
            'pod_label': 'pod_label',
            'deployment_selector': 'deployment_selector',
            'deployment_label': 'deployment_label',
            'replicas_number': 'replicas_number',
            'env': 'env',
            'volume_name': 'volume_name',
            'container_path': 'container_path',
            'host_path': 'host_path'
        }
        self._deployment_name = deployment_name
        self._container_name = container_name
        self._image_name = image_name
        self._container_port = container_port
        self._container_resource_limits_cpu_value = container_resource_limits_cpu_value
        self._container_resource_limits_memory_value = container_resource_limits_memory_value
        self._container_resource_requests_cpu_value = container_resource_requests_cpu_value
        self._container_resource_requests_memory_value = container_resource_requests_memory_value
        self._pod_label = pod_label
        self._deployment_selector = deployment_selector
        self._deployment_label = deployment_label
        self._replicas_number = replicas_number
        self._env = env
        self._volume_name = volume_name
        self._container_path = container_path
        self._host_path = host_path

    @classmethod
    def from_dict(cls, dikt) -> 'Deployment':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Deployment of this Deployment.  # noqa: E501
        :rtype: Deployment
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deployment_name(self) -> str:
        """Gets the deployment_name of this Deployment.


        :return: The deployment_name of this Deployment.
        :rtype: str
        """
        return self._deployment_name

    @deployment_name.setter
    def deployment_name(self, deployment_name: str):
        """Sets the deployment_name of this Deployment.


        :param deployment_name: The deployment_name of this Deployment.
        :type deployment_name: str
        """
        if deployment_name is None:
            raise ValueError("Invalid value for `deployment_name`, must not be `None`")  # noqa: E501

        self._deployment_name = deployment_name

    @property
    def container_name(self) -> str:
        """Gets the container_name of this Deployment.


        :return: The container_name of this Deployment.
        :rtype: str
        """
        return self._container_name

    @container_name.setter
    def container_name(self, container_name: str):
        """Sets the container_name of this Deployment.


        :param container_name: The container_name of this Deployment.
        :type container_name: str
        """
        if container_name is None:
            raise ValueError("Invalid value for `container_name`, must not be `None`")  # noqa: E501

        self._container_name = container_name

    @property
    def image_name(self) -> str:
        """Gets the image_name of this Deployment.


        :return: The image_name of this Deployment.
        :rtype: str
        """
        return self._image_name

    @image_name.setter
    def image_name(self, image_name: str):
        """Sets the image_name of this Deployment.


        :param image_name: The image_name of this Deployment.
        :type image_name: str
        """
        if image_name is None:
            raise ValueError("Invalid value for `image_name`, must not be `None`")  # noqa: E501

        self._image_name = image_name

    @property
    def container_port(self) -> List[int]:
        """Gets the container_port of this Deployment.


        :return: The container_port of this Deployment.
        :rtype: List[int]
        """
        return self._container_port

    @container_port.setter
    def container_port(self, container_port: List[int]):
        """Sets the container_port of this Deployment.


        :param container_port: The container_port of this Deployment.
        :type container_port: List[int]
        """
        if container_port is None:
            raise ValueError("Invalid value for `container_port`, must not be `None`")  # noqa: E501

        self._container_port = container_port

    @property
    def container_resource_limits_cpu_value(self) -> str:
        """Gets the container_resource_limits_cpu_value of this Deployment.

        CPU resources are measured in milLiCPU units  # noqa: E501

        :return: The container_resource_limits_cpu_value of this Deployment.
        :rtype: str
        """
        return self._container_resource_limits_cpu_value

    @container_resource_limits_cpu_value.setter
    def container_resource_limits_cpu_value(self, container_resource_limits_cpu_value: str):
        """Sets the container_resource_limits_cpu_value of this Deployment.

        CPU resources are measured in milLiCPU units  # noqa: E501

        :param container_resource_limits_cpu_value: The container_resource_limits_cpu_value of this Deployment.
        :type container_resource_limits_cpu_value: str
        """

        self._container_resource_limits_cpu_value = container_resource_limits_cpu_value

    @property
    def container_resource_limits_memory_value(self) -> str:
        """Gets the container_resource_limits_memory_value of this Deployment.

        Memory is measured in bytes.  # noqa: E501

        :return: The container_resource_limits_memory_value of this Deployment.
        :rtype: str
        """
        return self._container_resource_limits_memory_value

    @container_resource_limits_memory_value.setter
    def container_resource_limits_memory_value(self, container_resource_limits_memory_value: str):
        """Sets the container_resource_limits_memory_value of this Deployment.

        Memory is measured in bytes.  # noqa: E501

        :param container_resource_limits_memory_value: The container_resource_limits_memory_value of this Deployment.
        :type container_resource_limits_memory_value: str
        """

        self._container_resource_limits_memory_value = container_resource_limits_memory_value

    @property
    def container_resource_requests_cpu_value(self) -> str:
        """Gets the container_resource_requests_cpu_value of this Deployment.

        CPU resources are measured in milLiCPU units  # noqa: E501

        :return: The container_resource_requests_cpu_value of this Deployment.
        :rtype: str
        """
        return self._container_resource_requests_cpu_value

    @container_resource_requests_cpu_value.setter
    def container_resource_requests_cpu_value(self, container_resource_requests_cpu_value: str):
        """Sets the container_resource_requests_cpu_value of this Deployment.

        CPU resources are measured in milLiCPU units  # noqa: E501

        :param container_resource_requests_cpu_value: The container_resource_requests_cpu_value of this Deployment.
        :type container_resource_requests_cpu_value: str
        """

        self._container_resource_requests_cpu_value = container_resource_requests_cpu_value

    @property
    def container_resource_requests_memory_value(self) -> str:
        """Gets the container_resource_requests_memory_value of this Deployment.

        Memory is measured in bytes.  # noqa: E501

        :return: The container_resource_requests_memory_value of this Deployment.
        :rtype: str
        """
        return self._container_resource_requests_memory_value

    @container_resource_requests_memory_value.setter
    def container_resource_requests_memory_value(self, container_resource_requests_memory_value: str):
        """Sets the container_resource_requests_memory_value of this Deployment.

        Memory is measured in bytes.  # noqa: E501

        :param container_resource_requests_memory_value: The container_resource_requests_memory_value of this Deployment.
        :type container_resource_requests_memory_value: str
        """

        self._container_resource_requests_memory_value = container_resource_requests_memory_value

    @property
    def pod_label(self) -> object:
        """Gets the pod_label of this Deployment.


        :return: The pod_label of this Deployment.
        :rtype: object
        """
        return self._pod_label

    @pod_label.setter
    def pod_label(self, pod_label: object):
        """Sets the pod_label of this Deployment.


        :param pod_label: The pod_label of this Deployment.
        :type pod_label: object
        """
        if pod_label is None:
            raise ValueError("Invalid value for `pod_label`, must not be `None`")  # noqa: E501

        self._pod_label = pod_label

    @property
    def deployment_selector(self) -> object:
        """Gets the deployment_selector of this Deployment.


        :return: The deployment_selector of this Deployment.
        :rtype: object
        """
        return self._deployment_selector

    @deployment_selector.setter
    def deployment_selector(self, deployment_selector: object):
        """Sets the deployment_selector of this Deployment.


        :param deployment_selector: The deployment_selector of this Deployment.
        :type deployment_selector: object
        """
        if deployment_selector is None:
            raise ValueError("Invalid value for `deployment_selector`, must not be `None`")  # noqa: E501

        self._deployment_selector = deployment_selector

    @property
    def deployment_label(self) -> object:
        """Gets the deployment_label of this Deployment.


        :return: The deployment_label of this Deployment.
        :rtype: object
        """
        return self._deployment_label

    @deployment_label.setter
    def deployment_label(self, deployment_label: object):
        """Sets the deployment_label of this Deployment.


        :param deployment_label: The deployment_label of this Deployment.
        :type deployment_label: object
        """

        self._deployment_label = deployment_label

    @property
    def replicas_number(self) -> int:
        """Gets the replicas_number of this Deployment.


        :return: The replicas_number of this Deployment.
        :rtype: int
        """
        return self._replicas_number

    @replicas_number.setter
    def replicas_number(self, replicas_number: int):
        """Sets the replicas_number of this Deployment.


        :param replicas_number: The replicas_number of this Deployment.
        :type replicas_number: int
        """

        self._replicas_number = replicas_number

    @property
    def env(self) -> List[List[object]]:
        """Gets the env of this Deployment.


        :return: The env of this Deployment.
        :rtype: List[List[object]]
        """
        return self._env

    @env.setter
    def env(self, env: List[List[object]]):
        """Sets the env of this Deployment.


        :param env: The env of this Deployment.
        :type env: List[List[object]]
        """

        self._env = env

    @property
    def volume_name(self) -> List[str]:
        """Gets the volume_name of this Deployment.


        :return: The volume_name of this Deployment.
        :rtype: List[str]
        """
        return self._volume_name

    @volume_name.setter
    def volume_name(self, volume_name: List[str]):
        """Sets the volume_name of this Deployment.


        :param volume_name: The volume_name of this Deployment.
        :type volume_name: List[str]
        """

        self._volume_name = volume_name

    @property
    def container_path(self) -> List[str]:
        """Gets the container_path of this Deployment.


        :return: The container_path of this Deployment.
        :rtype: List[str]
        """
        return self._container_path

    @container_path.setter
    def container_path(self, container_path: List[str]):
        """Sets the container_path of this Deployment.


        :param container_path: The container_path of this Deployment.
        :type container_path: List[str]
        """

        self._container_path = container_path

    @property
    def host_path(self) -> List[str]:
        """Gets the host_path of this Deployment.


        :return: The host_path of this Deployment.
        :rtype: List[str]
        """
        return self._host_path

    @host_path.setter
    def host_path(self, host_path: List[str]):
        """Sets the host_path of this Deployment.


        :param host_path: The host_path of this Deployment.
        :type host_path: List[str]
        """

        self._host_path = host_path
