# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ResourceQuota(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, resourcequota_name: str=None, cpu_limit_value: str=None, memory_limit_value: str=None, cpu_request_value: str=None, memory_request_value: str=None, storage_request_value: str=None):  # noqa: E501
        """ResourceQuota - a model defined in Swagger

        :param resourcequota_name: The resourcequota_name of this ResourceQuota.  # noqa: E501
        :type resourcequota_name: str
        :param cpu_limit_value: The cpu_limit_value of this ResourceQuota.  # noqa: E501
        :type cpu_limit_value: str
        :param memory_limit_value: The memory_limit_value of this ResourceQuota.  # noqa: E501
        :type memory_limit_value: str
        :param cpu_request_value: The cpu_request_value of this ResourceQuota.  # noqa: E501
        :type cpu_request_value: str
        :param memory_request_value: The memory_request_value of this ResourceQuota.  # noqa: E501
        :type memory_request_value: str
        :param storage_request_value: The storage_request_value of this ResourceQuota.  # noqa: E501
        :type storage_request_value: str
        """
        self.swagger_types = {
            'resourcequota_name': str,
            'cpu_limit_value': str,
            'memory_limit_value': str,
            'cpu_request_value': str,
            'memory_request_value': str,
            'storage_request_value': str
        }

        self.attribute_map = {
            'resourcequota_name': 'resourcequota_name',
            'cpu_limit_value': 'cpu_limit_value',
            'memory_limit_value': 'memory_limit_value',
            'cpu_request_value': 'cpu_request_value',
            'memory_request_value': 'memory_request_value',
            'storage_request_value': 'storage_request_value'
        }
        self._resourcequota_name = resourcequota_name
        self._cpu_limit_value = cpu_limit_value
        self._memory_limit_value = memory_limit_value
        self._cpu_request_value = cpu_request_value
        self._memory_request_value = memory_request_value
        self._storage_request_value = storage_request_value

    @classmethod
    def from_dict(cls, dikt) -> 'ResourceQuota':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ResourceQuota of this ResourceQuota.  # noqa: E501
        :rtype: ResourceQuota
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resourcequota_name(self) -> str:
        """Gets the resourcequota_name of this ResourceQuota.


        :return: The resourcequota_name of this ResourceQuota.
        :rtype: str
        """
        return self._resourcequota_name

    @resourcequota_name.setter
    def resourcequota_name(self, resourcequota_name: str):
        """Sets the resourcequota_name of this ResourceQuota.


        :param resourcequota_name: The resourcequota_name of this ResourceQuota.
        :type resourcequota_name: str
        """
        if resourcequota_name is None:
            raise ValueError("Invalid value for `resourcequota_name`, must not be `None`")  # noqa: E501

        self._resourcequota_name = resourcequota_name

    @property
    def cpu_limit_value(self) -> str:
        """Gets the cpu_limit_value of this ResourceQuota.


        :return: The cpu_limit_value of this ResourceQuota.
        :rtype: str
        """
        return self._cpu_limit_value

    @cpu_limit_value.setter
    def cpu_limit_value(self, cpu_limit_value: str):
        """Sets the cpu_limit_value of this ResourceQuota.


        :param cpu_limit_value: The cpu_limit_value of this ResourceQuota.
        :type cpu_limit_value: str
        """
        if cpu_limit_value is None:
            raise ValueError("Invalid value for `cpu_limit_value`, must not be `None`")  # noqa: E501

        self._cpu_limit_value = cpu_limit_value

    @property
    def memory_limit_value(self) -> str:
        """Gets the memory_limit_value of this ResourceQuota.


        :return: The memory_limit_value of this ResourceQuota.
        :rtype: str
        """
        return self._memory_limit_value

    @memory_limit_value.setter
    def memory_limit_value(self, memory_limit_value: str):
        """Sets the memory_limit_value of this ResourceQuota.


        :param memory_limit_value: The memory_limit_value of this ResourceQuota.
        :type memory_limit_value: str
        """
        if memory_limit_value is None:
            raise ValueError("Invalid value for `memory_limit_value`, must not be `None`")  # noqa: E501

        self._memory_limit_value = memory_limit_value

    @property
    def cpu_request_value(self) -> str:
        """Gets the cpu_request_value of this ResourceQuota.


        :return: The cpu_request_value of this ResourceQuota.
        :rtype: str
        """
        return self._cpu_request_value

    @cpu_request_value.setter
    def cpu_request_value(self, cpu_request_value: str):
        """Sets the cpu_request_value of this ResourceQuota.


        :param cpu_request_value: The cpu_request_value of this ResourceQuota.
        :type cpu_request_value: str
        """

        self._cpu_request_value = cpu_request_value

    @property
    def memory_request_value(self) -> str:
        """Gets the memory_request_value of this ResourceQuota.


        :return: The memory_request_value of this ResourceQuota.
        :rtype: str
        """
        return self._memory_request_value

    @memory_request_value.setter
    def memory_request_value(self, memory_request_value: str):
        """Sets the memory_request_value of this ResourceQuota.


        :param memory_request_value: The memory_request_value of this ResourceQuota.
        :type memory_request_value: str
        """

        self._memory_request_value = memory_request_value

    @property
    def storage_request_value(self) -> str:
        """Gets the storage_request_value of this ResourceQuota.


        :return: The storage_request_value of this ResourceQuota.
        :rtype: str
        """
        return self._storage_request_value

    @storage_request_value.setter
    def storage_request_value(self, storage_request_value: str):
        """Sets the storage_request_value of this ResourceQuota.


        :param storage_request_value: The storage_request_value of this ResourceQuota.
        :type storage_request_value: str
        """

        self._storage_request_value = storage_request_value
