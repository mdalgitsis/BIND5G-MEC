# coding: utf-8

"""
    Edge-API

    The Edge-API is built under the BIND5G project and its purpose is to act as an intermidiator between the NaaS API and the Kubernetes cluster. The NaaS API is a general API in respect of the project to remotely and automatically deploy, manage and control 5G and MEC infrastructures for a vast amount of experiments. On the other hand, the Edge-API is a specific backend API to manage Kubernetes resources and deploy application instances into the cluster.  # noqa: E501

    OpenAPI spec version: 1.0.2
    Contact: mdalgitsis@vicomtech.org
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ScaleVertical(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'container_resource_limits_cpu_value': 'str',
        'container_resource_limits_memory_value': 'str',
        'container_resource_requests_cpu_value': 'str',
        'container_resource_requests_memory_value': 'str',
        'deployment_selector': 'object'
    }

    attribute_map = {
        'container_resource_limits_cpu_value': 'container_resource_limits_cpu_value',
        'container_resource_limits_memory_value': 'container_resource_limits_memory_value',
        'container_resource_requests_cpu_value': 'container_resource_requests_cpu_value',
        'container_resource_requests_memory_value': 'container_resource_requests_memory_value',
        'deployment_selector': 'deployment_selector'
    }

    def __init__(self, container_resource_limits_cpu_value=None, container_resource_limits_memory_value=None, container_resource_requests_cpu_value=None, container_resource_requests_memory_value=None, deployment_selector=None):  # noqa: E501
        """ScaleVertical - a model defined in Swagger"""  # noqa: E501
        self._container_resource_limits_cpu_value = None
        self._container_resource_limits_memory_value = None
        self._container_resource_requests_cpu_value = None
        self._container_resource_requests_memory_value = None
        self._deployment_selector = None
        self.discriminator = None
        self.container_resource_limits_cpu_value = container_resource_limits_cpu_value
        self.container_resource_limits_memory_value = container_resource_limits_memory_value
        self.container_resource_requests_cpu_value = container_resource_requests_cpu_value
        self.container_resource_requests_memory_value = container_resource_requests_memory_value
        self.deployment_selector = deployment_selector

    @property
    def container_resource_limits_cpu_value(self):
        """Gets the container_resource_limits_cpu_value of this ScaleVertical.  # noqa: E501

        CPU resources are measured in milLiCPU units  # noqa: E501

        :return: The container_resource_limits_cpu_value of this ScaleVertical.  # noqa: E501
        :rtype: str
        """
        return self._container_resource_limits_cpu_value

    @container_resource_limits_cpu_value.setter
    def container_resource_limits_cpu_value(self, container_resource_limits_cpu_value):
        """Sets the container_resource_limits_cpu_value of this ScaleVertical.

        CPU resources are measured in milLiCPU units  # noqa: E501

        :param container_resource_limits_cpu_value: The container_resource_limits_cpu_value of this ScaleVertical.  # noqa: E501
        :type: str
        """
        if container_resource_limits_cpu_value is None:
            raise ValueError("Invalid value for `container_resource_limits_cpu_value`, must not be `None`")  # noqa: E501

        self._container_resource_limits_cpu_value = container_resource_limits_cpu_value

    @property
    def container_resource_limits_memory_value(self):
        """Gets the container_resource_limits_memory_value of this ScaleVertical.  # noqa: E501

        Memory is measured in bytes.  # noqa: E501

        :return: The container_resource_limits_memory_value of this ScaleVertical.  # noqa: E501
        :rtype: str
        """
        return self._container_resource_limits_memory_value

    @container_resource_limits_memory_value.setter
    def container_resource_limits_memory_value(self, container_resource_limits_memory_value):
        """Sets the container_resource_limits_memory_value of this ScaleVertical.

        Memory is measured in bytes.  # noqa: E501

        :param container_resource_limits_memory_value: The container_resource_limits_memory_value of this ScaleVertical.  # noqa: E501
        :type: str
        """
        if container_resource_limits_memory_value is None:
            raise ValueError("Invalid value for `container_resource_limits_memory_value`, must not be `None`")  # noqa: E501

        self._container_resource_limits_memory_value = container_resource_limits_memory_value

    @property
    def container_resource_requests_cpu_value(self):
        """Gets the container_resource_requests_cpu_value of this ScaleVertical.  # noqa: E501

        CPU resources are measured in milLiCPU units  # noqa: E501

        :return: The container_resource_requests_cpu_value of this ScaleVertical.  # noqa: E501
        :rtype: str
        """
        return self._container_resource_requests_cpu_value

    @container_resource_requests_cpu_value.setter
    def container_resource_requests_cpu_value(self, container_resource_requests_cpu_value):
        """Sets the container_resource_requests_cpu_value of this ScaleVertical.

        CPU resources are measured in milLiCPU units  # noqa: E501

        :param container_resource_requests_cpu_value: The container_resource_requests_cpu_value of this ScaleVertical.  # noqa: E501
        :type: str
        """
        if container_resource_requests_cpu_value is None:
            raise ValueError("Invalid value for `container_resource_requests_cpu_value`, must not be `None`")  # noqa: E501

        self._container_resource_requests_cpu_value = container_resource_requests_cpu_value

    @property
    def container_resource_requests_memory_value(self):
        """Gets the container_resource_requests_memory_value of this ScaleVertical.  # noqa: E501

        Memory is measured in bytes.  # noqa: E501

        :return: The container_resource_requests_memory_value of this ScaleVertical.  # noqa: E501
        :rtype: str
        """
        return self._container_resource_requests_memory_value

    @container_resource_requests_memory_value.setter
    def container_resource_requests_memory_value(self, container_resource_requests_memory_value):
        """Sets the container_resource_requests_memory_value of this ScaleVertical.

        Memory is measured in bytes.  # noqa: E501

        :param container_resource_requests_memory_value: The container_resource_requests_memory_value of this ScaleVertical.  # noqa: E501
        :type: str
        """
        if container_resource_requests_memory_value is None:
            raise ValueError("Invalid value for `container_resource_requests_memory_value`, must not be `None`")  # noqa: E501

        self._container_resource_requests_memory_value = container_resource_requests_memory_value

    @property
    def deployment_selector(self):
        """Gets the deployment_selector of this ScaleVertical.  # noqa: E501


        :return: The deployment_selector of this ScaleVertical.  # noqa: E501
        :rtype: object
        """
        return self._deployment_selector

    @deployment_selector.setter
    def deployment_selector(self, deployment_selector):
        """Sets the deployment_selector of this ScaleVertical.


        :param deployment_selector: The deployment_selector of this ScaleVertical.  # noqa: E501
        :type: object
        """
        if deployment_selector is None:
            raise ValueError("Invalid value for `deployment_selector`, must not be `None`")  # noqa: E501

        self._deployment_selector = deployment_selector

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ScaleVertical, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ScaleVertical):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
